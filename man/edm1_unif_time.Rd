% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_fun.R
\name{edm1_unif_time}
\alias{edm1_unif_time}
\title{edm1_unif_time}
\usage{
edm1_unif_time(
  n_inpt,
  min_inpt,
  max_inpt,
  random_seed = "random_data2.csv",
  prev_inpt = 1
)
}
\arguments{
\item{n_inpt}{is the number of valyues you want}

\item{min_inpt}{is the minimum in the uniform distribution}

\item{max_inpt}{is the maximum in the uniform distribution}

\item{random_seed}{is the csv of random values that the algo will use, defaults to R/random_data2.csv}

\item{prev_inpt}{is the prevalence of the random values (normally should not be changed, but you can play with it)}
}
\description{
Implementation of the runif function, see examples.
}
\examples{

x <- edm1_unif_time(n_inpt = 5000,
                    min_inpt = 10,
                    max_inpt = 15,
                    random_seed = "random_data2.csv",
                    prev_inpt = 1)

################################## to compare to runif

library("ggplot2")
library("edm1")
pdf("out.pdf")

x <- edm1_unif_time(n_inpt = 5000,
                    min_inpt = 10,
                    max_inpt = 15,
                    random_seed = "random_data2.csv",
                    prev_inpt = 1)
x <- sort(as.numeric(x))

head(x)

datf <- occu(as.integer(x))

ggplot(data = datf, mapping = aes(x = var, y = occurence)) + 
  geom_col() + 
  theme_minimal()

x <- runif(n = 5000, min = 10, max = 15)
datf <- occu(as.integer(x))

ggplot(data = datf, mapping = aes(x = var, y = occurence)) + 
  geom_col() + 
  theme_minimal()


}
