v <- c(1, 2)
v[-1]
v[-2]
v
l <- list(c(1, 2, 3), c(4, 5, 6))
l
l[1]
l[2]
length(l)
l[2]
l[2][2]
v <- l[2]
v[1]
v <- unlist(l[2])
v
v[1]
data.frame(matrix(4, ())
data.frame(matrix(4, 5))
data.frame(matrix(nrow=4, ncol=5))
data.frame(matrix(1:4, nrow=4, ncol=5))
df[2]
df[, 2]
df <- data.frame(matrix(1:4, nrow=4, ncol=5))
df[2]
df[, 2]
df[2]
df[2,]
df[,2]
df[,2][df[,2]==3])
which(df[,2][df[,2]==3])
which(df[,2] == 2)
df <- data.frame(matrix(1:1, nrow=4, ncol=5))
df
which(df[,2] == 2)
which(df[,2] == 1)
match(df[,2] == 1)
match(1, df[,2])
which(df[,2] == 1)
which(df[,2] == 1)[2]
v <- c()
v2 <- c(1, 2)
v <- append(v, v2)
v
v <- append(v, v2)
v
v[2]
data.frame(c(1, 1, 2, 2), c(2, 2, 2, 3), c(1, 1, 1, NA))
df[, 1]
df[1, 1]
df[1,]
ncol(df)
df
df <- data.frame(c(1, 1, 2, 2), c(2, 2, 2, 3), c(1, 1, 1, NA))
df
df[1,]
df[1,1]
df[1,2]
as.character(df)
df
df
as.character(df)
as.character(df)[1, ]
df
as.matrix(df)
t <- as.matrix(df)
as.character(t)
as.matrix(df)
as.matrix(df)[1, ]
as.matrix(df)[1, 2]
as.matrix(df)[1, 3]
df
transform(df, as.character)
transform(df, as.character)[1, ]
transform(df, as.character)[1, 1])
typeof(transform(df, as.character)[1, 1])
typeof(df[1, 1])
df <- data.frame(a=c(1, 1, 2, 2), b=c(2, 2, 2, 3), c=c(1, 1, 1, NA))
df
typeof(transform(df, a=as.character(a))[1, 1])
df2 <- transform(df, a=as.character(a))
df2
df[1, 1])
typeof(df[1, 1])
typeof(df2[1, 1])
paste(df[1,], pattern=" ")
paste(df[1,], pattern=" ")
paste(df[1,], collpase=" ")
paste(df[1,], collpase="")
paste(df[2,], collpase="")
df
paste(df[,2], collpase="")
paste(df[,3], collpase="")
paste0(df[,3], collpase=""))
typeof((paste0(df[,3], collpase=""))
)
typeof(paste0(df[,3], collpase=""))
as.vector(df[1,])
df[1, ]
v <- as.vector(df[1,])
v
v[2]
v[1]
v[3]
df$c
df$c[NA]
df$c[df$c == NA]
df$c[df$c == Z]
df$c[df$c == "z"]
df$c[df$c == 1]
df$c
df$c[is.na(df$c)]
df
df <- data.frame(a=c(1, 1, 2, 2), b=c(2, 2, 2, 3), c=c(1, 1, 1, NA), row.names=c("A", "B", "C"))
df <- data.frame(a=c(1, 1, 2, 2), b=c(2, 2, 2, 3), c=c(1, 1, 1, NA), row.names=c("A", "B", "C", "D"))
df
df["B", ]
df <- data.frame("a"=c(1, 1, 2, 2), "b"=c(2, 2, 2, 3), "c"=c(1, 1, 1, NA), row.names=c("A", "B", "C", "D"))
df
df
v <- df[1, *]
v <- df[1, ]
v
typeof(v[1])
typeof(unlist(v[1]))
v <- unlist(v[1])
v
v <- df[1, ]
v <- unlist(v)
v
v[3]
v[3] + 2
v <- unlist(df[1, ])
v
paste0(v)
paste0(v, collpse=""))
paste0(paste0(v, collpse=""), collpse="")
paste0(paste0(v, v, collpse=""), collpse="")
df
df2
paste0(df, df2, collpase="")
df+df2
df
df2
sum(df, df2)
transform(df2, "a"=as.numeric(df2))
transform(df2, "a"=as.numeric("a"))
sum(df, df2)
sum(1, 2)
sum(1, 2, 4)
sum(1, 2, 4, 1)
sum(c(2, 1), c(1, 2))
v <- c(1, 2, 3)
v <- v - 1
v
v2 <- c(1, 2, 3)
v <- v + v2
v
v2 <- c(1, 2, 3, 5)
v <- v + v2
build()
library("devtools")
library("roxygen2")
build()
install()
library(edm)
library(edm1)
can_be_num(3)
letter_to_nb("AA")
library(edm1)
letter_to_nb("AA")
library("roxygen2")
roxygenise()
library("devtools")
build_manual()
pack <- "edm"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),
    "CMD", "Rd2pdf", shQuote(path)))
render("can_be_num.Rmd", "pdf_document")
install.packages("rmarkdown")
library("rmarkdown")
render("can_be_num.Rmd", "pdf_document")
library("roxygen2")
document()
library("devtools")
document()
library("devtools")
devtools::load_all(".")
build_manual(pkg = ".", path = NULL)
build_manual(pkg = "edm1", path = NULL)
as.package()
build_manual(pkg = "R/all_fun.R", path = NULL)
rlang::last_trace()
build_manual(pkg = "edm1", path = "R/all_fun.R")
build_manual(pkg = "R", path = "R/all_fun.R")
rlang::last_trace()
build_manual(pkg = ".", path = "R/all_fun.R")
rlang::last_trace()
tinytex::tlmgr_install("makeindex")
rlang::last_trace()
build_manual(pkg = ".", path = "R/all_fun.R")
build_manual(pkg = ".", path = NULL)
library("devtools")
library("devtools")
devtools::load_all(".")
build_manual(pkg = ".", path = "R/all_fun.R")
BiocManager::install(version='devel')
library("devtools")
devtools::load_all(".")
BiocManager::install(version='devel')
version
library("devtools")
update.packages(checkBuilt=TRUE, ask=FALSE)
library("devtools")
library("devtools")
library("devtools")
document()
library("devtools")
build()
install()
library("devtools")
document()
build()
install()
library("edm1")
unique_pos(c(1, 3, 3, 4))
library("devtools")
build()
install()
library("edm1")
can_be_num(4)
can_be_num("eee")
can_be_num("e")
can_be_num("4")
can_be_num("48")
library("devtools")
build()
install()
library("edm1")
can_be_num("48")
library("stringr")
can_be_num("48")
str_detect(c(1, 2), 1)
str_detect(c("1", "2"), "1")
grepl("1", c("1", "2"))
library("devtools")
document()
build()
install()
library("devtools")
document()
build()
install()
install.packages("Rd2markdown")
install.packages("genentech")
install.packages("Genentech")
install.packages("rd2markdown")
install.packages("rd2markdown")
remotes::install_github("Genentech/rd2markdown")
library("devtools")
document()
install()
build()
install()
library("devtools")
build()
install()
document()
build()
install()
library("devtools")
document()
build()
install()
library("devtools")
document()
build()
install()
document()
library("devtools")
document()
build()
install()
library("devtools")
document()
build()
install()
library("devtools")
document()
build()
install()
document()
library("devtools")
document()
library("devtools")
document()
library("devtools")
document()
library("devtools")
document()
library("devtools")
document()
library("devtools")
document()
library("devtools")
document()
build()
install()
